#!/bin/sh

# Portable echo(). It includes -n option.
echo() {
    if [ "$1" = "-n" ]; then
        shift
        if [ "$(command echo -n test 2>/dev/null)" = "test" ]; then
            command echo -n "$@"
        else
            printf "%s" "$*"
        fi
    else
        command echo "$@"
    fi
}

show_help()
{
    echo Configure help:
    echo "--help               show this help"
    echo "--no-tcl             disable TCL scripting support"
    echo "                     even if uid != euid"
}

if [ "$1" = "--help" ]; then
    show_help
    exit 0
fi

CC=${CC:=cc}

echo -n "Build byteorder.c... "
$CC src/byteorder.c -o src/byteorder || exit 1
echo "done."

INSTALL_MANPATH=`echo $MANPATH | cut -f1 -d:`
if [ "$INSTALL_MANPATH" = "" ]; then
    INSTALL_MANPATH="/usr/local/man"
fi
BYTEORDER=`./src/byteorder -m`

echo -n "Create byteorder.h... "
cat > src/byteorder.h <<EOF
#ifndef __BYTEORDER_H
#define __BYTEORDER_H

EOF
echo \#ifndef $BYTEORDER >> src/byteorder.h
echo \#define $BYTEORDER >> src/byteorder.h
echo \#endif /\* $BYTEORDER \*/ >> src/byteorder.h
cat >> src/byteorder.h <<EOF

#endif /* __BYTEORDER_H */
EOF
echo "done."

#
# configurable stuff
#
PCAP="PCAP=-lpcap"

#
# TCL detection
#
TCLSH=`command -v tclsh`
if [ -f $TCLSH ]; then
    echo "===> Found Tclsh in: $TCLSH"
    USE_TCL="-DUSE_TCL"
    TCL_VER=`echo "puts \\$tcl_version" | $TCLSH -`
    TCL_LIB="-ltcl${TCL_VER}"
    if [ -e /usr/include/tcl${TCL_VER} ]; then
        TCL_INC="-I/usr/include/tcl${TCL_VER}"
    elif [ -e /usr/include/tcl.h ]; then
        TCL_INC=""
    elif [ -e /usr/local/include/tcl${TCL_VER} ]; then
        TCL_INC="-I/usr/local/include/tcl${TCL_VER}"
    elif [ -e /opt/homebrew/include/tcl-tk/tcl.h ]; then
        TCL_INC="-I/opt/homebrew/include/tcl-tk"
    else
        USE_TCL=""
        TCL_LIB=""
        echo "==> WARNING: no Tcl header files found!"
    fi
fi

if [ -z "${USE_TCL}" ]; then
    LIBPOSTFIX=`ls -1 /usr/local/lib/ /usr/lib /opt/homebrew/lib | \
        grep 'libtcl[0-9][\.0-9]' | grep -e 'so' -e 'dylib' | \
        sed -e 's/\.so.*//g' -e 's/libtcl//g' -e 's/\.dylib.*//g' | \
        sort -r | head -1`
    TCL_LIB="-L/opt/homebrew/lib -ltcl${LIBPOSTFIX} -lm -lpthread"
fi

CONFIGOSTYPE=`uname -s | tr [a-z] [A-Z]`
if [ ! "$CONFIGOSTYPE" ]; then
    CONFIGOSTYPE=UNKNOWN
fi

# for BSD/OS use the historical name as it doesn't include '/'
if [  $CONFIGOSTYPE = "BSD/OS" ]; then
    CONFIGOSTYPE=BSDI
fi

case $CONFIGOSTYPE in
    DARWIN)
        if [ -n "${PCAP}" ]; then
            if [ -d /opt/homebrew/opt/libpcap ]; then
                PCAP_INCLUDE="-I/opt/homebrew/opt/libpcap"
            fi
        fi
        if [ -n "${USE_TCL}" ]; then
            if [ -d /opt/homebrew/lib ]; then
                TCL_LIB="-L/opt/homebrew/lib ${TCL_LIB}"
            fi
        fi
        ;;
    SUNOS)
        SOLARISLIB="-lsocket -lresolv -lnsl"
        BUG='/* #define STUPID_SOLARIS_CHECKSUM_BUG */'
        case `uname -r` in
            2.0*|5.0*|2.1*|5.1*|2.2*|5.2*|2.3*|5.3*|2.4*|5.4*|5.5.1)
                BUG='#define STUPID_SOLARIS_CHECKSUM_BUG'
                ;;
        esac
        ;;
    *)
        PCAP_INCLUDE=""
        ;;
esac

for ARG in $*; do
    case "$ARG" in
        *"--no-tcl")
            USE_TCL=""
            TCL_VER=""
            TCL_INC=""
            TCL_LIB=""
            ;;
    esac
done

echo --------------------------------------
echo System type: $CONFIGOSTYPE
echo
echo "LIBPCAP      : $PCAP"
echo "PCAP_INCLUDE : $PCAP_INCLUDE"
echo "MANPATH      : $INSTALL_MANPATH"
echo "USE_TCL      : $USE_TCL"
echo "TCL_VER      : $TCL_VER"
echo "TCL_INC      : $TCL_INC"
echo "LIBTCL       : $TCL_LIB"
echo "TCLSH        : $TCLSH"
echo
echo "(to modify try configure --help)"
echo --------------------------------------

echo -n "Creating Makefile... "
sed	-e "s^@PCAP@^$PCAP^g" \
    -e "s^@PCAP_INCLUDE@^$PCAP_INCLUDE^g" \
    -e "s^@MANPATH@^$INSTALL_MANPATH^g" \
    -e "s^@SOLARISLIB@^$SOLARISLIB^g" \
    -e "s^@USE_TCL@^$USE_TCL^g" \
    -e "s^@TCL_INC@^$TCL_INC^g" \
    -e "s^@TCL_VER@^$TCL_VER^g" \
    -e "s^@TCL_LIB@^$TCL_LIB^g" \
    <Makefile.in > Makefile
echo "done."

#
#
#

cat > src/systype.h <<EOF
#ifndef __SYSTYPE_H
#define __SYSTYPE_H

EOF
echo \#define OSTYPE_${CONFIGOSTYPE} >> src/systype.h
cat >> src/systype.h <<EOF

#endif /* SYSTYPE_H */
EOF

echo -n "Creating dependences... "
$CC -MM src/*.c > src/.depend
echo "done."

echo Now you can try \`make\'
